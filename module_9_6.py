# Функции-генератора all_variants
def all_variants(text):
    length = len(text)
    for start in range(length):
        for end in range(start + 1, length + 1):
            yield text[start:end]  # Генерируем подпоследовательность от start до end
# Пример использования функции-генератора
a = all_variants("abc")

for i in a:
    print(i)

# Функция-генератор all_variants(text) принимает строку text и определяет её длину.
# Два вложенных цикла for используются для перебора всех возможных начальных и конечных
# индексов подстрок:

# Внешний цикл start проходит от 0 до length - 1, указывая на начальный индекс подстроки.

# Внутренний цикл end проходит от start + 1 до length, указывая на конечный индекс подстроки.

# Оператор yield используется для возвращения каждой найденной подпоследовательности.
# Это позволяет функции запоминать своё состояние между вызовами и возвращать
# последовательности по одной каждой итерации.

# Пример вывода:

# a
# ab
# abc
# b
# bc
# c
